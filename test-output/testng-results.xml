<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-13T16:17:33 IST" name="Suite" finished-at="2023-07-13T16:18:29 IST" duration-ms="55803">
    <groups>
      <group name="login">
        <method signature="Regcross.testcase1()[pri:1, instance:testngpracties.Regcross@1d9b7cce]" name="testcase1" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase2()[pri:2, instance:testngpracties.Regcross@1d9b7cce]" name="testcase2" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase3()[pri:3, instance:testngpracties.Regcross@1d9b7cce]" name="testcase3" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase4()[pri:4, instance:testngpracties.Regcross@1d9b7cce]" name="testcase4" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase5()[pri:5, instance:testngpracties.Regcross@1d9b7cce]" name="testcase5" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase6()[pri:6, instance:testngpracties.Regcross@1d9b7cce]" name="testcase6" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase1()[pri:1, instance:testngpracties.Regcross@5b8dfcc1]" name="testcase1" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase2()[pri:2, instance:testngpracties.Regcross@5b8dfcc1]" name="testcase2" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase3()[pri:3, instance:testngpracties.Regcross@5b8dfcc1]" name="testcase3" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase4()[pri:4, instance:testngpracties.Regcross@5b8dfcc1]" name="testcase4" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase5()[pri:5, instance:testngpracties.Regcross@5b8dfcc1]" name="testcase5" class="testngpracties.Regcross"/>
        <method signature="Regcross.testcase6()[pri:6, instance:testngpracties.Regcross@5b8dfcc1]" name="testcase6" class="testngpracties.Regcross"/>
        <method signature="Testpracties.testcase1()[pri:1, instance:selfpractiestng.Testpracties@6cf0e0ba]" name="testcase1" class="selfpractiestng.Testpracties"/>
        <method signature="Testpracties.testcase1()[pri:1, instance:selfpractiestng.Testpracties@6aeb35e6]" name="testcase1" class="selfpractiestng.Testpracties"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2023-07-13T16:17:33 IST" name="Test1" finished-at="2023-07-13T16:18:01 IST" duration-ms="28077">
      <class name="testngpracties.Regcross">
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:33 IST" name="buildexection" finished-at="2023-07-13T16:17:39 IST" duration-ms="6031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase1()[pri:1, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:39 IST" name="testcase1" finished-at="2023-07-13T16:17:40 IST" duration-ms="1152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:40 IST" name="buildclose" finished-at="2023-07-13T16:17:41 IST" duration-ms="499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:41 IST" name="buildexection" finished-at="2023-07-13T16:17:44 IST" duration-ms="3070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase2()[pri:2, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:44 IST" name="testcase2" finished-at="2023-07-13T16:17:45 IST" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:45 IST" name="buildclose" finished-at="2023-07-13T16:17:45 IST" duration-ms="480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:45 IST" name="buildexection" finished-at="2023-07-13T16:17:48 IST" duration-ms="2599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase3()[pri:3, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:48 IST" name="testcase3" finished-at="2023-07-13T16:17:49 IST" duration-ms="768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:49 IST" name="buildclose" finished-at="2023-07-13T16:17:49 IST" duration-ms="531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:49 IST" name="buildexection" finished-at="2023-07-13T16:17:52 IST" duration-ms="2575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase4()[pri:4, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:52 IST" name="testcase4" finished-at="2023-07-13T16:17:53 IST" duration-ms="870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase4 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:53 IST" name="buildclose" finished-at="2023-07-13T16:17:53 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:53 IST" name="buildexection" finished-at="2023-07-13T16:17:56 IST" duration-ms="2753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase5()[pri:5, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:56 IST" name="testcase5" finished-at="2023-07-13T16:17:56 IST" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase5 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:56 IST" name="buildclose" finished-at="2023-07-13T16:17:57 IST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:17:57 IST" name="buildexection" finished-at="2023-07-13T16:18:00 IST" duration-ms="2825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase6()[pri:6, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:18:00 IST" name="testcase6" finished-at="2023-07-13T16:18:01 IST" duration-ms="755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase6 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@1d9b7cce]" started-at="2023-07-13T16:18:01 IST" name="buildclose" finished-at="2023-07-13T16:18:01 IST" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
      </class> <!-- testngpracties.Regcross -->
    </test> <!-- Test1 -->
    <test started-at="2023-07-13T16:18:01 IST" name="Test2" finished-at="2023-07-13T16:18:22 IST" duration-ms="20391">
      <class name="testngpracties.Regcross">
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:01 IST" name="buildexection" finished-at="2023-07-13T16:18:04 IST" duration-ms="2450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase1()[pri:1, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:04 IST" name="testcase1" finished-at="2023-07-13T16:18:04 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:04 IST" name="buildclose" finished-at="2023-07-13T16:18:05 IST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:05 IST" name="buildexection" finished-at="2023-07-13T16:18:07 IST" duration-ms="2139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase2()[pri:2, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:07 IST" name="testcase2" finished-at="2023-07-13T16:18:08 IST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:08 IST" name="buildclose" finished-at="2023-07-13T16:18:08 IST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:08 IST" name="buildexection" finished-at="2023-07-13T16:18:10 IST" duration-ms="2128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase3()[pri:3, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:10 IST" name="testcase3" finished-at="2023-07-13T16:18:11 IST" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:11 IST" name="buildclose" finished-at="2023-07-13T16:18:11 IST" duration-ms="323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:11 IST" name="buildexection" finished-at="2023-07-13T16:18:13 IST" duration-ms="2213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase4()[pri:4, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:13 IST" name="testcase4" finished-at="2023-07-13T16:18:14 IST" duration-ms="983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase4 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:14 IST" name="buildclose" finished-at="2023-07-13T16:18:15 IST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:15 IST" name="buildexection" finished-at="2023-07-13T16:18:17 IST" duration-ms="2329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase5()[pri:5, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:17 IST" name="testcase5" finished-at="2023-07-13T16:18:17 IST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase5 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:17 IST" name="buildclose" finished-at="2023-07-13T16:18:18 IST" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
        <test-method is-config="true" signature="buildexection(java.lang.String,java.lang.String)[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:18 IST" name="buildexection" finished-at="2023-07-13T16:18:20 IST" duration-ms="2753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexection -->
        <test-method signature="testcase6()[pri:6, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:20 IST" name="testcase6" finished-at="2023-07-13T16:18:21 IST" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase6 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:testngpracties.Regcross@5b8dfcc1]" started-at="2023-07-13T16:18:21 IST" name="buildclose" finished-at="2023-07-13T16:18:22 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
      </class> <!-- testngpracties.Regcross -->
    </test> <!-- Test2 -->
    <test started-at="2023-07-13T16:18:22 IST" name="Testcase1" finished-at="2023-07-13T16:18:25 IST" duration-ms="3705">
      <class name="selfpractiestng.Testpracties">
        <test-method is-config="true" signature="buildexecution(java.lang.String,java.lang.String)[pri:0, instance:selfpractiestng.Testpracties@6cf0e0ba]" started-at="2023-07-13T16:18:22 IST" name="buildexecution" finished-at="2023-07-13T16:18:24 IST" duration-ms="2410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexecution -->
        <test-method signature="testcase1()[pri:1, instance:selfpractiestng.Testpracties@6cf0e0ba]" started-at="2023-07-13T16:18:24 IST" name="testcase1" finished-at="2023-07-13T16:18:25 IST" duration-ms="776" status="FAIL">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: MicrosoftEdge=114.0.1823.79)
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [cee8e4473bd982221dc4a59695035584, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 114.0.1823.79, ms:edgeOptions: {debuggerAddress: localhost:50459}, msedge: {msedgedriverVersion: 114.0.1823.79 (c0c722a9579e..., userDataDir: C:\Users\ksaik\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50459/devtoo..., se:cdpVersion: 114.0.1823.79, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cee8e4473bd982221dc4a59695035584]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: MicrosoftEdge=114.0.1823.79)
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [cee8e4473bd982221dc4a59695035584, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 114.0.1823.79, ms:edgeOptions: {debuggerAddress: localhost:50459}, msedge: {msedgedriverVersion: 114.0.1823.79 (c0c722a9579e..., userDataDir: C:\Users\ksaik\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50459/devtoo..., se:cdpVersion: 114.0.1823.79, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cee8e4473bd982221dc4a59695035584
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:598)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:1079)
at selfpractiestng.Testpracties.testcase1(Testpracties.java:47)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:selfpractiestng.Testpracties@6cf0e0ba]" started-at="2023-07-13T16:18:25 IST" name="buildclose" finished-at="2023-07-13T16:18:25 IST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
      </class> <!-- selfpractiestng.Testpracties -->
    </test> <!-- Testcase1 -->
    <test started-at="2023-07-13T16:18:25 IST" name="Testcase2" finished-at="2023-07-13T16:18:29 IST" duration-ms="3576">
      <class name="selfpractiestng.Testpracties">
        <test-method is-config="true" signature="buildexecution(java.lang.String,java.lang.String)[pri:0, instance:selfpractiestng.Testpracties@6aeb35e6]" started-at="2023-07-13T16:18:25 IST" name="buildexecution" finished-at="2023-07-13T16:18:28 IST" duration-ms="2349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://bsadar.github.io/hmrbuild1/Loging.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildexecution -->
        <test-method signature="testcase1()[pri:1, instance:selfpractiestng.Testpracties@6aeb35e6]" started-at="2023-07-13T16:18:28 IST" name="testcase1" finished-at="2023-07-13T16:18:28 IST" duration-ms="760" status="FAIL">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=114.0.5735.199)
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [567ba89b41bce3538000d6e8c3d41880, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\ksaik\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50487}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50487/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 567ba89b41bce3538000d6e8c3d41880]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=114.0.5735.199)
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [567ba89b41bce3538000d6e8c3d41880, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\ksaik\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50487}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50487/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 567ba89b41bce3538000d6e8c3d41880
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:598)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:1079)
at selfpractiestng.Testpracties.testcase1(Testpracties.java:47)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="buildclose()[pri:0, instance:selfpractiestng.Testpracties@6aeb35e6]" started-at="2023-07-13T16:18:28 IST" name="buildclose" finished-at="2023-07-13T16:18:29 IST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildclose -->
      </class> <!-- selfpractiestng.Testpracties -->
    </test> <!-- Testcase2 -->
  </suite> <!-- Suite -->
</testng-results>
